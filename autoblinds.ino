/* 
  Sketch generated by the Arduino IoT Cloud Thing "Autoblinds"
  https://create.arduino.cc/cloud/things/19a15907-3e9c-4b04-90e0-009bfab01435 

  Arduino IoT Cloud Variables description

  The following variables are automatically generated and updated when changes are made to the Thing

  CloudDimmedLight blinds_angle;

  Variables which are marked as READ/WRITE in the Cloud Thing will also have functions
  which are called when their values are changed from the Dashboard.
  These functions are generated with the Thing and added at the end of this sketch.
*/

#include <Servo.h>
#include "thingProperties.h"

Servo servo0;  // create servo object to control a servo

#define servo0Pin 10
#define potPin A3

int angle = 0;    // initial angle  for servo
int prevPotVal = 0;
int potVal = 0;

void setAngle(int angle);

void setup() {
  // Initialize serial and wait for port to open:
  Serial.begin(9600);
  // This delay gives the chance to wait for a Serial Monitor without blocking if none is found
  delay(1500); 

  // Defined in thingProperties.h
  initProperties();

  // Connect to Arduino IoT Cloud
  ArduinoCloud.begin(ArduinoIoTPreferredConnection);
  
  /*
     The following function allows you to obtain more information
     related to the state of network and IoT Cloud connection and errors
     the higher number the more granular information youâ€™ll get.
     The default is 0 (only errors).
     Maximum is 4
 */
  setDebugMessageLevel(2);
  ArduinoCloud.printDebugInfo();
  
  servo0.attach(servo0Pin);  // attaches the servo on pin 10 to the servo object
  potVal = analogRead(potPin);
  prevPotVal = potVal;

}

void loop() {
  ArduinoCloud.update();
  // Your code here 
  potVal = analogRead(potPin);
  if (abs(potVal - prevPotVal) > 100) {
    prevPotVal = potVal;
    angle = map(potVal, 0, 1023, 0, 180);

    setAngle(angle);
  }
  
}

void setAngle(int angle) {
  servo0.attach(servo0Pin);
  servo0.write(angle); // move the servo to desired angle
  delay(2000); // waits for the servo to get there
  servo0.detach(); // Stop servo straining to reach position
}

/*

  Since BlindsAngle is READ_WRITE variable, onBlindsAngleChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onBlindsAngleChange()  {
  // Add your code here to act upon BlindsAngle change
  angle = map(blinds_angle.getBrightness(), 0, 100, 0, 180);
  setAngle(angle);
  
}
